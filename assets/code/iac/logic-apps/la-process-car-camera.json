{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "full": {
            "type": "object"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('full').logicApps.processCarCamera.name]",
            "location": "[parameters('full').general.location]",
            "tags": "[parameters('full').general.tags]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                            },
                            "type": "Object"
                        },
                        "ApiManagementSubscriptionKey": {
                            "type": "SecureString"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "Microsoft.Storage.BlobCreated"
                                            ],
                                            "subjectBeginsWith": "[concat('/blobServices/default/containers/', parameters('full').storageAccount.containers.carCamera)]"
                                        },
                                        "topic": "[resourceId('Microsoft.Storage/storageAccounts', parameters('full').storageAccount.name)]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                                    }
                                },
                                "path": "[concat('/subscriptions/@{encodeURIComponent(''', subscription().subscriptionId, ''')}/providers/@{encodeURIComponent(''Microsoft.Storage.StorageAccounts'')}/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Send_message": {
                                    "runAfter": {
                                        "Translate_fuel_type": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "ContentData": "@{base64(concat('{','\n','    \"licensePlate\": \"',body('Get_car_information')[0]?['kenteken'],'\",','\n','    \"periodicVehiceInspectionValidUntil\": \"',body('Get_car_information')[0]?['vervaldatum_apk'],'\",','\n','    \"fuelType\": \"',body('Translate_fuel_type')[0]?['translations'][0]?['text'],'\",','\n','    \"imageUrl\": \"',body('Create_SAS_URI_by_path')?['WebUrl'],'\"','\n','}'))}",
                                            "ContentType": "application/json"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['servicebus']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "[concat('/@{encodeURIComponent(encodeURIComponent(''', parameters('full').serviceBus.queues.carCamera, '''))}/messages')]",
                                        "queries": {
                                            "systemProperties": "None"
                                        }
                                    }
                                },
                                "Translate_fuel_type": {
                                    "inputs": {
                                        "api": {
                                            "id": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('full').apiManagement.name, parameters('full').apiManagement.apis.translator.name)]"
                                        },
                                        "body": [
                                            {
                                                "Text": "@{body('Get_fuel_information')[0]?['brandstof_omschrijving']}"
                                            }
                                        ],
                                        "method": "post",
                                        "pathTemplate": {
                                            "parameters": {},
                                            "template": "[concat('/', parameters('full').apiManagement.apis.translator.name, parameters('full').apiManagement.apis.translator.urlTemplate)]"
                                        },
                                        "queries": {
                                            "from": "nl",
                                            "to": "en"
                                        },
                                        "subscriptionKey": "@parameters('ApiManagementSubscriptionKey')"
                                    },
                                    "runAfter": {},
                                    "type": "ApiManagement"
                                }
                            },
                            "runAfter": {
                                "Get_fuel_information": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('Get_car_information'))",
                                            0
                                        ]
                                    },
                                    {
                                        "greater": [
                                            "@length(body('Get_fuel_information'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Create_SAS_URI_by_path": {
                            "runAfter": {
                                "Filename": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Permissions": "Read"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/CreateSharedLinkByPath",
                                "queries": {
                                    "path": "[concat('/', parameters('full').storageAccount.containers.carCamera, '/@{variables(''Filename'')}')]"
                                }
                            }
                        },
                        "Filename": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Filename",
                                        "type": "string",
                                        "value": "@{substring(triggerBody()?['subject'], add(lastIndexOf(triggerBody()?['subject'], '/'), 1))}"
                                    }
                                ]
                            }
                        },
                        "Get_car_information": {
                            "runAfter": {
                                "LicensePlateRecognizer": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiManagement",
                            "inputs": {
                                "api": {
                                    "id": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('full').apiManagement.name, parameters('full').apiManagement.apis.rdw.name)]"
                                },
                                "method": "get",
                                "pathTemplate": {
                                    "parameters": {},
                                    "template": "[concat('/', parameters('full').apiManagement.apis.rdw.name, parameters('full').apiManagement.apis.rdw.operations.licensedCars.path)]"
                                },
                                "queries": {
                                    "licensePlateNumber": "@{body('LicensePlateRecognizer')}"
                                },
                                "subscriptionKey": "@parameters('ApiManagementSubscriptionKey')"
                            }
                        },
                        "Get_fuel_information": {
                            "runAfter": {
                                "Get_car_information": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiManagement",
                            "inputs": {
                                "api": {
                                    "id": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('full').apiManagement.name, parameters('full').apiManagement.apis.rdw.name)]"
                                },
                                "method": "get",
                                "pathTemplate": {
                                    "parameters": {},
                                    "template": "[concat('/', parameters('full').apiManagement.apis.rdw.name, parameters('full').apiManagement.apis.rdw.operations.fuelTypes.path)]"
                                },
                                "queries": {
                                    "licensePlateNumber": "@{body('LicensePlateRecognizer')}"
                                },
                                "subscriptionKey": "@parameters('ApiManagementSubscriptionKey')"
                            }
                        },
                        "LicensePlateRecognizer": {
                            "runAfter": {
                                "Optical_Character_Recognition_(OCR)_to_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": "@body('Optical_Character_Recognition_(OCR)_to_JSON')",
                                "function": {
                                    "id": "[resourceId('Microsoft.Web/sites/functions', parameters('full').functionApps.licensePlateRecognizer.name,  parameters('full').functionApps.licensePlateRecognizer.function)]"
                                },
                                "method": "POST"
                            }
                        },
                        "Optical_Character_Recognition_(OCR)_to_JSON": {
                            "runAfter": {
                                "Create_SAS_URI_by_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "url": "@body('Create_SAS_URI_by_path')?['WebUrl']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicescomputervision']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/vision/v2.0/ocr",
                                "queries": {
                                    "detectOrientation": true,
                                    "format": "Image URL",
                                    "language": "unk"
                                }
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('full').logicApps.apiConnections.azureblob)]",
                                "connectionName": "azureblob",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('full').general.location, '/managedApis/azureblob')]"
                            },
                            "azureeventgrid": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('full').logicApps.apiConnections.azureeventgrid)]",
                                "connectionName": "azureeventgrid",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('full').general.location, '/managedApis/azureeventgrid')]"
                            },
                            "cognitiveservicescomputervision": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('full').logicApps.apiConnections.cognitiveservicescomputervision)]",
                                "connectionName": "cognitiveservicescomputervision",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('full').general.location, '/managedApis/cognitiveservicescomputervision')]"
                            },
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('full').logicApps.apiConnections.servicebus)]",
                                "connectionName": "servicebus",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('full').general.location, '/managedApis/servicebus')]"
                            }
                        }
                    },
                    "ApiManagementSubscriptionKey": {
                        "value": "[listSecrets(resourceId('Microsoft.ApiManagement/service/subscriptions', parameters('full').apiManagement.name, parameters('full').apiManagement.subscriptions.azurePlatform), '2019-12-01').primaryKey]"
                    }
                },
                "state": "Enabled"
            }
        }
    ]
}
