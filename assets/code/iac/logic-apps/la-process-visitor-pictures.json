{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "full": {
            "type": "object"
        }
    },
    "variables": {
        "apiManagementName": "[concat(parameters('full').apiManagement.name, uniqueString(resourceGroup().name))]",
        "storageAccountName": "[concat(parameters('full').storageAccount.name, uniqueString(resourceGroup().name))]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('full').logicApps.processVisitorPictures.name]",
            "location": "[parameters('full').general.location]",
            "tags": "[parameters('full').general.tags]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "type": "Object"
                        },
                        "ApiManagementSubscriptionKey": {
                            "type": "SecureString"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "Microsoft.Storage.BlobCreated"
                                            ],
                                            "subjectBeginsWith": "[concat('/blobServices/default/containers/', parameters('full').storageAccount.containers.visitorPictures)]"
                                        },
                                        "topic": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                                    }
                                },
                                "path": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/@{encodeURIComponent(''Microsoft.Storage.StorageAccounts'')}/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-09-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Add_a_person_face": {
                            "runAfter": {
                                "Create_SAS_URI_by_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "url": "@body('Create_SAS_URI_by_path')?['WebUrl']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['faceapi']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "[concat('/face/v1.0/persongroups/@{encodeURIComponent(''', parameters('full').cognitiveServices.face.personGroupVisitors, ''')}/persons/@{encodeURIComponent(variables(''Face API Person ID''))}/persistedFaces')]"
                            }
                        },
                        "Create_SAS_URI_by_path": {
                            "runAfter": {
                                "Visitor_was_found": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Permissions": "Read"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/CreateSharedLinkByPath",
                                "queries": {
                                    "path": "[concat('/', parameters('full').storageAccount.containers.visitorPictures, '/@{variables(''Visitor'')}')]"
                                }
                            }
                        },
                        "Delete_blob": {
                            "runAfter": {
                                "Train": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "[concat('/datasets/default/files/@{encodeURIComponent(encodeURIComponent(''/', parameters('full').storageAccount.containers.visitorPictures, '/'',variables(''Visitor'')))}')]"
                            }
                        },
                        "Face_API_Person_ID": {
                            "runAfter": {
                                "Visitor_found": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Face API Person ID",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Train": {
                            "runAfter": {
                                "Add_a_person_face": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiManagement",
                            "inputs": {
                                "api": {
                                    "id": "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementName'), parameters('full').apiManagement.apis.face.name)]"
                                },
                                "method": "post",
                                "pathTemplate": {
                                    "parameters": {
                                        "personGroupId": "[concat('@{encodeURIComponent(''', parameters('full').cognitiveServices.face.personGroupVisitors, ''')}')]"
                                    },
                                    "template": "[concat('/', parameters('full').apiManagement.apis.face.name, parameters('full').apiManagement.apis.face.operations.train.urlTemplate)]"
                                },
                                "subscriptionKey": "@parameters('ApiManagementSubscriptionKey')"
                            }
                        },
                        "Until": {
                            "actions": {
                                "Check_visitor_found": {
                                    "actions": {
                                        "Set_visitor_found": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Visitor Found",
                                                "value": true
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Get_visitor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Delay": {
                                                "runAfter": {},
                                                "type": "Wait",
                                                "inputs": {
                                                    "interval": {
                                                        "count": 30,
                                                        "unit": "Second"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(body('Get_visitor')?['value'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Get_visitor": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['commondataservice']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "[concat('/v2/datasets/@{encodeURIComponent(encodeURIComponent(''', parameters('full').commonDataService.organization, '''))}/tables/@{encodeURIComponent(encodeURIComponent(''', parameters('full').commonDataService.entities.visitors.name, '''))}/items')]",
                                        "queries": {
                                            "$filter": "[concat(parameters('full').commonDataService.entities.visitors.fields.name, ' eq ''@{variables(''Visitor'')}''')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Face_API_Person_ID": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(variables('Visitor Found'), true)",
                            "limit": {
                                "count": 600,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "Visitor": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Visitor",
                                        "type": "string",
                                        "value": "@{substring(triggerBody()?['subject'], add(lastIndexOf(triggerBody()?['subject'], '/'), 1))}"
                                    }
                                ]
                            }
                        },
                        "Visitor_found": {
                            "runAfter": {
                                "Visitor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Visitor Found",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Visitor_was_found": {
                            "actions": {
                                "Update_Face_API_Person_ID_from_CRM": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Face API Person ID",
                                        "value": "[concat('@{body(''Get_visitor'')?[''value''][0]?[''', parameters('full').commonDataService.entities.visitors.fields.faceApiPersonId, ''']}')]"
                                    }
                                },
                                "Visitor_is_missing_Face_API_Person_ID": {
                                    "actions": {
                                        "Create_person": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "name": "@variables('Visitor')"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['faceapi']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "[concat('/face/v1.0/persongroups/@{encodeURIComponent(''', parameters('full').cognitiveServices.face.personGroupVisitors, ''')}/persons')]"
                                            }
                                        },
                                        "Set_Face_API_Person_ID_from_Face_API": {
                                            "runAfter": {
                                                "Create_person": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Face API Person ID",
                                                "value": "@body('Create_person')?['personId']"
                                            }
                                        },
                                        "Update_visitor": {
                                            "runAfter": {
                                                "Set_Face_API_Person_ID_from_Face_API": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "new_faceapipersonid": "@variables('Face API Person ID')"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['commondataservice']['connectionId']"
                                                    }
                                                },
                                                "method": "patch",
                                                "path": "[concat('/v2/datasets/@{encodeURIComponent(encodeURIComponent(''', parameters('full').commonDataService.organization, '''))}/tables/@{encodeURIComponent(encodeURIComponent(''', parameters('full').commonDataService.entities.visitors.name, '''))}/items/@{encodeURIComponent(encodeURIComponent(body(''Get_visitor'')?[''value''][0]?[''', parameters('full').commonDataService.entities.visitors.fields.visitorId, ''']))}')]"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Update_Face_API_Person_ID_from_CRM": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@length(variables('Face API Person ID'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Until": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Terminate": {
                                        "runAfter": {},
                                        "type": "Terminate",
                                        "inputs": {
                                            "runStatus": "Cancelled"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('Visitor Found')",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('full').logicApps.apiConnections.azureblob)]",
                                "connectionName": "azureblob",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('full').general.location, '/managedApis/azureblob')]"
                            },
                            "azureeventgrid": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('full').logicApps.apiConnections.azureeventgrid)]",
                                "connectionName": "azureeventgrid",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('full').general.location, '/managedApis/azureeventgrid')]"
                            },
                            "commondataservice": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('full').logicApps.apiConnections.commondataservice)]",
                                "connectionName": "commondataservice",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('full').general.location, '/managedApis/commondataservice')]"
                            },
                            "faceapi": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('full').logicApps.apiConnections.faceapi)]",
                                "connectionName": "faceapi",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('full').general.location, '/managedApis/faceapi')]"
                            }
                        }
                    },
                    "ApiManagementSubscriptionKey": {
                        "value": "[listSecrets(resourceId('Microsoft.ApiManagement/service/subscriptions', variables('apiManagementName'), parameters('full').apiManagement.subscriptions.azurePlatform), '2019-12-01').primaryKey]"
                    }
                },
                "state": "Enabled"
            }
        }
    ]
}
