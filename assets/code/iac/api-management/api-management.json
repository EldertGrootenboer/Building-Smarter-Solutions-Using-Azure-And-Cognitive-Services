{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "full": {
            "type": "object"
        }
    },
    "variables": {
        "apiManagementName": "[concat(parameters('full').apiManagement.name, uniqueString(resourceGroup().name))]",
        "keyVaultName": "[concat(parameters('full').keyVault.name, uniqueString(resourceGroup().name))]"
    },
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2019-01-01",
            "name": "[variables('apiManagementName')]",
            "location": "[parameters('full').general.location]",
            "tags": "[parameters('full').general.tags]",
            "sku": {
                "name": "[parameters('full').apiManagement.sku]",
                "capacity": 1
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "publisherEmail": "[parameters('full').apiManagement.publisherEmail]",
                "publisherName": "[parameters('full').apiManagement.publisherName]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/loggers",
            "apiVersion": "2019-01-01",
            "name": "[concat(variables('apiManagementName'), '/', parameters('full').applicationInsights.name)]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementName'))]"
            ],
            "properties": {
                "loggerType": "applicationInsights",
                "credentials": {
                    "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('full').applicationInsights.name), '2014-04-01').InstrumentationKey]"
                },
                "isBuffered": true,
                "resourceId": "[resourceId('Microsoft.Insights/components', parameters('full').applicationInsights.name)]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/diagnostics",
            "apiVersion": "2019-01-01",
            "name": "[concat(variables('apiManagementName'), '/applicationinsights')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementName'))]",
                "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apiManagementName'), parameters('full').applicationInsights.name)]"
            ],
            "properties": {
                "alwaysLog": "allErrors",
                "httpCorrelationProtocol": "Legacy",
                "logClientIp": true,
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apiManagementName'), parameters('full').applicationInsights.name)]",
                "sampling": {
                    "samplingType": "fixed",
                    "percentage": 100
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2019-12-01",
            "name": "[concat(variables('apiManagementName'), '/', parameters('full').apiManagement.subscriptions.azurePlatform)]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementName'))]"
            ],
            "properties": {
                "scope": "[concat(resourceId('Microsoft.ApiManagement/service', variables('apiManagementName')), '/apis')]",
                "displayName": "[parameters('full').apiManagement.subscriptions.azurePlatform]",
                "state": "active",
                "allowTracing": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('keyVaultName'), '/add')]",
            "apiVersion": "2016-10-01",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.ApiManagement/service', variables('apiManagementName')), '2019-01-01', 'full').identity.principalId]",
                        "permissions": {
                            "secrets": [
                                "get"
                            ]
                        }
                    }
                ]
            }
        }
    ]
}